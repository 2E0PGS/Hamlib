.\"                                      Hey, EMACS: -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.TH RIGCTL "1" "September 22, 2002" "Hamlib"
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.SH NAME
rigctl \- control radio transcievers and receivers
.SH SYNOPSIS
.B rigctl
[\fIOPTION\fR]... [\fICOMMAND\fR]...
.SH DESCRIPTION
Control radio transcievers and receivers.
\fBrigctl\fP accepts \fBcommands\fP from command line as well as in
interactive mode if none provided in command line.
.PP
.\" TeX users may be more comfortable with the \fB<whatever>\fP and
.\" \fI<whatever>\fP escape sequences to invode bold face and italics, 
.\" respectively.
Keep in mind that \fBHamlib\fP is still ALPHA level software. 
A lof of stuff hasn't been tested thoroughly, and the API may change
without publicised notice. Please report bugs and feedback at
the e-mail address given in the REPORTING BUGS section.
.SH OPTIONS
This program follow the usual GNU command line syntax, with long
options starting with two dashes (`-').
A summary of options is included below.
.TP
.B \-m, \-\-model=id
Select radio model number. See model list.
.TP
.B \-r, --rig-file=device
Use \fBdevice\fP as the file name of the radio to operate on.
.TP
.B \-p, --ptt-file=device
Use \fBdevice\fP as the file name of the Push-To-Talk device to operate on.
.TP
.B \-d, --dcd-file=device
Use \fBdevice\fP as the file name of the Data Carrier Detect device 
to operate on.
.TP
.B \-p, --ptt-type=type
Use \fBtype\fP device as the kind of the Push-To-Talk device to operate on.
Supported types are RIG, DTR, RTS, PARALLEL, NONE.
.TP
.B \-d, --dcd-type=type
Use \fBtype\fP device as the kind of the Data Carrier Detect device 
to operate on.
Supported types are RIG, DSR, CTS, PARALLEL, NONE.
.TP
.B \-s, --serial-speed=baud
Set serial speed to \fBbaud\fP rate. Uses maximal rig speed as default.
.TP
.B \-c, --civaddr=id
Use \fBid\fP as the CI-V address to communicate with the rig. 
Only for Icom rigs. NB: the id is in decimal, unless prefixed by \fB0x\fP,
in which case it is hexadecimal.
.TP
.B \-L, \-\-show-conf
List all config parameters.
.TP
.B \-C, \-\-set\-conf=parm=val[,parm=val]*
Set config parameter.
.TP
.B \-l, \-\-list
List all model numbers and exit.
.TP
.B \-u, \-\-dump\-caps
Dump capabilities and exit.
.TP
.B \-v, \-\-verbose
Set verbose mode, cumulative (BUG, ERR, WARN, VERBOSE, TRACE).
.TP
.B \-h, \-\-help
Show summary of options and exit.
.TP
.B \-V, \-\-version
Show version of program and exit.

.SH COMMANDS
Commands can be entered either as a single char, or as a long command name.
Basically, the commands do not take a dash in front of them on the command
line, as the options usually do. They may be typed in when in interactive mode
or provided as argument in command line interface mode.
.PP
Since most of the Hamlib operations have a \fIset\fP and a \fIget\fP method,
upper case letter will be used for \fIset\fP method whereas the corresponding
lower case letter refers to the \fIget\fP method.
In interactive, prepend a backslash to enter a long command name.
Example: "\\dump_caps" to see what this model can do.

.PP
Please note that the backend for the radio to be controlled, 
or the radio itself may not support some commands. In that case, 
the operation will fail with a standard error message.
.PP
A summary of commands is included below.
.TP
.B F, set_freq
Set frequency, in Hz.
.TP
.B f, get_freq
Get frequency, in Hz.
.TP
.B M, set_mode
Set mode/passband: AM, FM, CW, USB, LSB, RTTY, WFM.
The passband is the exact passband in Hz, or 0 for the default.
.TP
.B m, get_mode
Get mode/passband.
.TP
.B V, set_vfo
Set VFO: VFOA, VFOB, VFOC, VFO, MEM, Main, Sub, etc.
.TP
.B v, get_vfo
Get current VFO.
.TP
.B J, set_rit
Set RIT, in Hz.
.TP
.B j, get_rit
Get RIT, in Hz.
.TP
.B set_xit
Set XIT, in Hz.
.TP
.B get_xit
Get XIT, in Hz.
.TP
.B T, set_ptt
Set PTT, 0 or 1.
.TP
.B t, get_ptt
Get PTT status.
.TP
.B R, set_rptr_shift
Set repeater shift: "+", "-" or something else for none.
.TP
.B r, get_rptr_shift
Get repeater shift.
.TP
.B O, set_rptr_offs
Set repeater offset, in Hz.
.TP
.B o, get_rptr_offs
Get repeater offset.
.TP
.B C, set_ctcss_tone
Set CTCSS tone, in tenth of Hz.
.TP
.B c, get_ctcss_tone
Get CTCSS tone, in tenth of Hz.
.TP
.B D, set_dcs_code
Set DCS code.
.TP
.B d, get_dcs_code
Get DCS code.
.TP
.B I, set_split_freq
Set TX frequency, in Hz.
.TP
.B i, get_split_freq
Get TX frequency.
.TP
.B S, set_split
Set split mode, 0 or 1.
.TP
.B s, get_split
Get split mode.
.TP
.B N, set_ts
Set tuning step, in Hz.
.TP
.B n, get_ts
Get tuning step.
.TP
.B U, set_func
Set func/status:
FAGC, NB, COMP, VOX, TONE, TSQL, SBKIN, FBKIN, ANF, NR, AIP, MON, MN,
RNF, ARO, LOCK, MUTE, VSC, REV, SQL, BC, MBC, LMP, AFC, SATMODE, SCOPE, RESUME.
.TP
.B u, get_func
Get func status.
.TP
.B L, set_level
Set level/value:
PREAMP, ATT, VOX, AF, RF, SQL, IF, APF, NR, PBT_IN,
PBT_OUT, CWPITCH, RFPOWER, MICGAIN, KEYSPD, NOTCHF, COMP,
AGC, BKINDL, BAL, METER, VOXGAIN, ANTIVOX. Plus "extra" levels.
.TP
.B l, get_level
Get level value: also
SWR, ALC, SQLSTAT, STRENGTH.
.TP
.B P, set_parm
Set parm/value:
ANN, APO, BACKLIGHT, BEEP, TIME, BAT. Plus "extra" parameters.
.TP
.B p, get_parm
Get parm value.
.TP
.B B, set_bank
Set bank.
.TP
.B E, set_mem
Set memory channel number.
.TP
.B e, get_mem
Get memory channel number.
.TP
.B G, vfo_op
Perform VFO operation:
CPY, XCHG, FROM_VFO, TO_VFO, MCL, UP, DOWN, BAND_UP, BAND_DOWN, LEFT, RIGHT.
.TP
.B g, scan_op
Perform scan operation/channel: STOP, MEM, SLCT, PRIO, DELTA.
.TP
.B H, set_channel
Set memory channel data. Not implemented yet.
.TP
.B h, get_channel
Get memory channel data.
.TP
.B A, set_trn
Set transceive mode (reporting event).
.TP
.B a, get_trn
Get transceive mode (reporting event).
.TP
.B set_ant
Set antenna number (0, 1, 2, ..).
.TP
.B get_ant
Get antenna number (0, 1, 2, ..).
.TP
.B _, get_info
Get misc information about the rig.
.TP
.B dump_caps
Not a real rig remote command, it just dumps capabilities, 
i.e. what the backend knows about this model, and what it can do.

.SH RETURN VALUE
rigctl exits with:
0 if all operations went fine; 1 if there was an invalid command line
option or arg; or 2 if an error was returned by Hamlib.

.SH AUTHOR
Written by Stephane Fillod.
.SH BUGS
Cannot target VFO. Use set_vfo as a workaround.
.PP
This almost empty section...
.SH REPORTING BUGS
Report bugs to <hamlib-developer@users.sourceforge.net>.
.br
I'm already aware of the bug in the previous section :-)
.SH COPYRIGHT
Copyright \(co 2000-2002 Stephane Fillod & Frank Singleton.
.br
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE.
.SH SEE ALSO
.BR hamlib (3)

